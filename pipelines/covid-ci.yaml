groups:
  - name: all
    jobs:
      - import-gisaid
      - clean-gisaid-metadata
      - match-gisaid
      - import-az-tgen
      - copy-tgen-metadata
      - clean-tgen-metadata
      - match-tgen-metadata-and-seqs
      - import-az-other
      - copy-az-other-metadata
      - clean-az-other-metadata
      - match-az-other-metadata-and-seqs
      - import-reference
      - copy-reference-metadata
      - clean-reference-metadata
      - match-reference-metadata-and-seqs
      - filter-gisaid
      - merge-focal-seqs
      - filter-az-seqs
      - sample-neighbors
      - sample-longitudinal
      - sample-diversity
      - combine-selections
      - combine-metadata
      - summarize-selections
      - filter-to-subsample
      - merge-seqs
      - create-empress-table
      - align-seqs
      - copy-vcf-mask
      - import-vcf-mask
      - mask-lenient
      - mask-stringent
      - iqtree-lenient
      - iqtree-stringent
      - root-lenient
      - root-stringent
      - empress-stringent
      - empress-lenient
      - label-unaligned-seqs
      - export-unaligned
      - label-lenient
      - export-lenient
      - label-stringent
      - export-stringent
  - name: imports-all
    jobs:
      - import-gisaid
      - clean-gisaid-metadata
      - match-gisaid
      - import-az-tgen
      - copy-tgen-metadata
      - clean-tgen-metadata
      - match-tgen-metadata-and-seqs
      - import-az-other
      - copy-az-other-metadata
      - clean-az-other-metadata
      - match-az-other-metadata-and-seqs
      - import-reference
      - copy-reference-metadata
      - clean-reference-metadata
      - match-reference-metadata-and-seqs
      - filter-gisaid
      - copy-vcf-mask
      - import-vcf-mask
  - name: import-tgen
    jobs:
      - import-az-tgen
      - copy-tgen-metadata
      - clean-tgen-metadata
      - match-tgen-metadata-and-seqs
  - name: import-az-other
    jobs:
      - import-az-other
      - copy-az-other-metadata
      - clean-az-other-metadata
      - match-az-other-metadata-and-seqs
  - name: import-gisaid
    jobs:
      - import-gisaid
      - clean-gisaid-metadata
      - match-gisaid
      - filter-gisaid
  - name: import-reference
    jobs:
      - import-reference
      - copy-reference-metadata
      - clean-reference-metadata
      - match-reference-metadata-and-seqs
      - copy-vcf-mask
      - import-vcf-mask
  - name: results
    jobs:
      - summarize-selections
      - label-unaligned-seqs
      - export-unaligned
      - label-lenient
      - export-lenient
      - label-stringent
      - export-stringent
      - empress-stringent
      - empress-lenient


resource_types:
  - name: simple-remote-directory-resource
    type: docker-image
    source:
      repository: quay.io/qiime2/simple-remote-directory-resource

  - name: gsheets-resource
    type: docker-image
    source:
      repository: quay.io/qiime2/gsheets-resource

resources:
  - name: covid-ci
    type: git
    public: true
    source:
      uri: https://github.com/caporaso-lab/covid-ci
      branch: master

  - name: upload-gisaid
    type: simple-remote-directory-resource
    public: true
    check_every: 30m
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_upload_gisaid))

  - name: upload-metadata-gisaid
    type: simple-remote-directory-resource
    public: true
    check_every: 30m
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_upload_metadata_gisaid))

  - name: cleaned-metadata-gisaid
    type: simple-remote-directory-resource
    public: true
    check_every: 30m
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_cleaned_metadata_gisaid))

  - name: upload-az-tgen
    type: simple-remote-directory-resource
    public: true
    check_every: 30m
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_upload_az_tgen))

  - name: gsheets-az-tgen
    type: gsheets-resource
    public: true
    check_every: 15m
    source:
      file_id: ((tgen_metadata_file_id))
      rev_key: ((tgen_metadata_rev_key))
      credentials: ((service_account))

  - name: metadata-az-tgen
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_metadata_az_tgen))

  - name: cleaned-metadata-az-tgen
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_cleaned_metadata_az_tgen))

  - name: upload-az-other
    type: simple-remote-directory-resource
    public: true
    check_every: 30m
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_upload_az_other))

  - name: gsheets-az-other
    type: gsheets-resource
    public: true
    check_every: 15m
    source:
      file_id: ((az_metadata_file_id))
      rev_key: ((az_metadata_rev_key))
      credentials: ((service_account))

  - name: metadata-az-other
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_metadata_az_other))

  - name: cleaned-metadata-az-other
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_cleaned_metadata_az_other))

  - name: upload-reference
    type: simple-remote-directory-resource
    public: true
    check_every: 30m
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_upload_reference))

  - name: gsheets-reference
    type: gsheets-resource
    public: true
    check_every: 15m
    source:
      file_id: ((reference_metadata_file_id))
      rev_key: ((reference_metadata_rev_key))
      credentials: ((service_account))

  - name: metadata-reference
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_metadata_reference))

  - name: cleaned-metadata-reference
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_cleaned_metadata_reference))

  - name: seqs-gisaid
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_gisaid))

  - name: seqs-az-tgen-unmatched
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_az_tgen_unmatched))

  - name: seqs-az-tgen
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_az_tgen))

  - name: seqs-az-other
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_az_other))

  - name: seqs-reference
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_reference))

  - name: seqs-az-merged
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_az_merged))

  - name: seqs-az-focal
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_az_focal))

  - name: seqs-gisaid-matched
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_gisaid_matched))

  - name: seqs-gisaid-context
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_gisaid_context))

  - name: selection-longitudinal
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_selection_longitudinal))

  - name: selection-diversity
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_selection_diversity))

  - name: selection-neighbors
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_selection_neighbors))

  - name: view-selections
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_view_selections))

  - name: selection-final
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_selection_final))

  - name: subsampled-gisaid-context
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_subsampled_gisaid_context))

  - name: seqs-final
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_final))

  - name: empress-table
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_empress_table))

  - name: seqs-unaligned-labeled
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_unaligned_labeled))

  - name: seqs-unaligned-fasta
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_seqs_unaligned_fasta))

  - name: combined-metadata
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_combined_metadata))

  - name: alignment-raw
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_alignment_raw))

  - name: vcf-mask-upstream
    type: git
    public: true
    source:
      uri: https://github.com/W-L/ProblematicSites_SARS-CoV2.git
      branch: master
      paths: [problematic_sites_sarsCov2.vcf]

  - name: vcf-mask
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_vcf_mask))

  - name: alignment-mask
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_alignment_mask))

  - name: alignment-masked-lenient
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_alignment_masked_lenient))

  - name: alignment-masked-stringent
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_alignment_masked_stringent))

  - name: tree-ml-lenient
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_tree_ml_lenient))

  - name: tree-ml-stringent
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_tree_ml_stringent))

  - name: tree-rooted-lenient
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_tree_rooted_lenient))

  - name: tree-rooted-stringent
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_tree_rooted_stringent))

  - name: view-empress-lenient
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_view_empress_lenient))

  - name: view-empress-stringent
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_view_empress_stringent))

  - name: alignment-labeled-lenient
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_alignment_labeled_lenient))

  - name: export-alignment-lenient
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_export_alignment_lenient))

  - name: alignment-labeled-stringent
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_alignment_labeled_stringent))

  - name: export-alignment-stringent
    type: simple-remote-directory-resource
    public: true
    check_every: 48h
    source:
      hostname: ((hostname))
      username: ((username))
      private_key: ((private_key))
      key_type: ((key_type))
      path: ((path_export_alignment_stringent))

jobs:
  - name: import-gisaid
    public: true
    plan:
      - get: covid-ci
      - get: upload-gisaid
        trigger: true
      - task: import-gisaid
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: import
          Q2_INPUT: input1
          Q2_FORMAT: GISAIDDNAFASTAFormat
          Q2_TYPE: FeatureData[Sequence]
          Q2_OUTPUT: ((path_seqs_gisaid))

          SLURM_cpus_per_task: 1
          SLURM_time: 3:30:00
          SLURM_mem: 12000

        input_mapping:
          input1: upload-gisaid

      - put: seqs-gisaid
        params:
          source: outputs/result/

  - name: clean-gisaid-metadata
    public: true
    plan:
      - get: covid-ci
      - get: upload-metadata-gisaid
        trigger: true
      - task: clean-gisaid-metadata
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          SCRIPT: rename_md_col.py
          SCRIPT_I_input: input1
          SCRIPT_output: ((path_cleaned_metadata_gisaid))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:05:00
          SLURM_mem: 4096

        input_mapping:
          input1: upload-metadata-gisaid

      - put: cleaned-metadata-gisaid
        params:
          source: outputs/result/

  - name: match-gisaid
    public: true
    plan:
      - get: covid-ci
      - get: seqs-gisaid
        passed: [import-gisaid]
        trigger: true
      - get: cleaned-metadata-gisaid
        passed: [clean-gisaid-metadata]
        trigger: true
      - task: match-gisaid-metadata
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: feature_table::filter_seqs
          Q2_I_data: input1
          Q2_M_metadata: input2
          Q2_P_where: ++NOLIST++ [division] != 'Arizona' AND [host] = 'Human'
          Q2_O_filtered_data: ((path_seqs_gisaid_matched))

          SLURM_cpus_per_task: 1
          SLURM_time: 2:30:00
          SLURM_mem: 92000

        input_mapping:
          input1: seqs-gisaid
          input2: cleaned-metadata-gisaid
      - put: seqs-gisaid-matched
        params:
          source: outputs/filtered_data/

  - name: filter-az-seqs
    public: true
    plan:
      - get: covid-ci
      - get: seqs-az-merged
        passed: [merge-focal-seqs]
        trigger: true
      - get: cleaned-metadata-az-tgen
        passed: [match-tgen-metadata-and-seqs]
      - get: cleaned-metadata-az-other
        passed: [match-az-other-metadata-and-seqs]
      - task: filter-az-seqs
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::filter_seqs
          Q2_I_sequences: input1
          Q2_P_min_length: 20000
          Q2_P_max_proportion_ambiguous: 0.1
          Q2_O_filtered_sequences: ((path_seqs_az_focal))

          SLURM_cpus_per_task: 1
          SLURM_time: 1:35:00
          SLURM_mem: 8096

        input_mapping:
          input1: seqs-az-merged
      - put: seqs-az-focal
        params:
          source: outputs/filtered_sequences/

  - name: filter-gisaid
    public: true
    plan:
      - get: covid-ci
      - get: seqs-gisaid-matched
        passed: [match-gisaid]
        trigger: true
      - get: cleaned-metadata-gisaid
        passed: [match-gisaid]
        trigger: true
      - task: filter-gisaid
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::filter_seqs
          Q2_I_sequences: input1
          Q2_P_min_length: 20000
          Q2_P_max_proportion_ambiguous: 0.1
          Q2_O_filtered_sequences: ((path_seqs_gisaid_context))

          SLURM_cpus_per_task: 1
          SLURM_time: 1:35:00
          SLURM_mem: 62000

        input_mapping:
          input1: seqs-gisaid-matched
      - put: seqs-gisaid-context
        params:
          source: outputs/filtered_sequences/

  - name: import-az-tgen
    public: true
    plan:
      - get: covid-ci
      - get: upload-az-tgen
        trigger: true
      - task: import-az-tgen
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: import
          Q2_INPUT: input1
          Q2_FORMAT: GISAIDDNAFASTAFormat
          Q2_TYPE: FeatureData[Sequence]
          Q2_OUTPUT: ((path_seqs_az_tgen_unmatched))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 4096

        input_mapping:
          input1: upload-az-tgen
      - put: seqs-az-tgen-unmatched
        params:
          source: outputs/result/

  - name: copy-tgen-metadata
    public: true
    plan:
      - get: covid-ci
      - get: gsheets-az-tgen
        trigger: true
      - task: copy-tgen-metadata
        file: covid-ci/tasks/transfer.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))
          EXTERNAL_DIR: ((path_metadata_az_tgen))
        input_mapping:
          input: gsheets-az-tgen
      - put: metadata-az-tgen
        params:
          source: output

  - name: clean-tgen-metadata
    public: true
    plan:
      - get: covid-ci
      - get: metadata-az-tgen
        passed: [copy-tgen-metadata]
        trigger: true
      - task: clean-tgen-metadata
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          SCRIPT: rename_md_col.py
          SCRIPT_I_input: input1
          SCRIPT_output: ((path_cleaned_metadata_az_tgen))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:05:00
          SLURM_mem: 4096

        input_mapping:
          input1: metadata-az-tgen

      - put: cleaned-metadata-az-tgen
        params:
          source: outputs/result/

  - name: match-tgen-metadata-and-seqs
    public: true
    plan:
      - get: covid-ci
      - get: cleaned-metadata-az-tgen
        passed: [clean-tgen-metadata]
        trigger: true
      - get: seqs-az-tgen-unmatched
        passed: [import-az-tgen]
        trigger: true
      - task: match-tgen-metadata-and-seqs
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: feature_table::filter_seqs
          Q2_I_data: input1
          Q2_M_metadata: input2
          Q2_O_filtered_data: ((path_seqs_az_tgen))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:30:00
          SLURM_mem: 4096

        input_mapping:
          input1: seqs-az-tgen-unmatched
          input2: cleaned-metadata-az-tgen
      - put: seqs-az-tgen
        params:
          source: outputs/filtered_data/

  - name: import-az-other
    public: true
    plan:
      - get: covid-ci
      - get: upload-az-other
        trigger: true
      - task: import-az-other
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: import
          Q2_INPUT: input1
          Q2_FORMAT: GISAIDDNAFASTAFormat
          Q2_TYPE: FeatureData[Sequence]
          Q2_OUTPUT: ((path_seqs_az_other))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 4096

        input_mapping:
          input1: upload-az-other
      - put: seqs-az-other
        params:
          source: outputs/result/

  - name: copy-az-other-metadata
    public: true
    plan:
      - get: covid-ci
      - get: gsheets-az-other
        trigger: true
      - task: copy-az-other-metadata
        file: covid-ci/tasks/transfer.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))
          EXTERNAL_DIR: ((path_metadata_az_other))
        input_mapping:
          input: gsheets-az-other
      - put: metadata-az-other
        params:
          source: output

  - name: clean-az-other-metadata
    public: true
    plan:
      - get: covid-ci
      - get: metadata-az-other
        passed: [copy-az-other-metadata]
        trigger: true
      - task: clean-az-other-metadata
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          SCRIPT: rename_md_col.py
          SCRIPT_I_input: input1
          SCRIPT_output: ((path_cleaned_metadata_az_other))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:05:00
          SLURM_mem: 4096

        input_mapping:
          input1: metadata-az-other

      - put: cleaned-metadata-az-other
        params:
          source: outputs/result/

  - name: match-az-other-metadata-and-seqs
    public: true
    plan:
      - get: covid-ci
      - get: cleaned-metadata-az-other
        passed: [clean-az-other-metadata]
        trigger: true
      - get: seqs-az-other
        passed: [import-az-other]
        trigger: true
      - task: match-az-other-metadata-and-seqs
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          SCRIPT: match_md_seqs.py
          SCRIPT_I_metadata: input1
          SCRIPT_I_seqs: input2

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 4096

        input_mapping:
          input1: cleaned-metadata-az-other
          input2: seqs-az-other

  - name: import-reference
    public: true
    plan:
      - get: covid-ci
      - get: upload-reference
        trigger: true
      - task: import-reference
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: import
          Q2_INPUT: input1
          Q2_FORMAT: GISAIDDNAFASTAFormat
          Q2_TYPE: FeatureData[Sequence]
          Q2_OUTPUT: ((path_seqs_reference))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:05:00
          SLURM_mem: 4096

        input_mapping:
          input1: upload-reference
      - put: seqs-reference
        params:
          source: outputs/result/

  - name: copy-reference-metadata
    public: true
    plan:
      - get: covid-ci
      - get: gsheets-reference
        trigger: true
      - task: copy-reference-metadata
        file: covid-ci/tasks/transfer.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))
          EXTERNAL_DIR: ((path_metadata_reference))
        input_mapping:
          input: gsheets-reference
      - put: metadata-reference
        params:
          source: output

  - name: clean-reference-metadata
    public: true
    plan:
      - get: covid-ci
      - get: metadata-reference
        passed: [copy-reference-metadata]
        trigger: true
      - task: clean-reference-metadata
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          SCRIPT: rename_md_col.py
          SCRIPT_I_input: input1
          SCRIPT_output: ((path_cleaned_metadata_reference))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:05:00
          SLURM_mem: 4096

        input_mapping:
          input1: metadata-reference
      - put: cleaned-metadata-reference
        params:
          source: outputs/result/

  - name: match-reference-metadata-and-seqs
    public: true
    plan:
      - get: covid-ci
      - get: cleaned-metadata-reference
        passed: [clean-reference-metadata]
        trigger: true
      - get: seqs-reference
        passed: [import-reference]
        trigger: true
      - task: match-reference-metadata-and-seqs
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          SCRIPT: match_md_seqs.py
          SCRIPT_I_metadata: input1
          SCRIPT_I_seqs: input2

          SLURM_cpus_per_task: 1
          SLURM_time: 0:05:00
          SLURM_mem: 4096

        input_mapping:
          input1: cleaned-metadata-reference
          input2: seqs-reference

  - name: merge-focal-seqs
    public: true
    plan:
      - get: covid-ci
      - get: seqs-az-tgen
        passed: [match-tgen-metadata-and-seqs]
        trigger: true
      - get: seqs-az-other
        passed: [match-az-other-metadata-and-seqs]
        trigger: true
      - get: cleaned-metadata-az-tgen
        passed: [match-tgen-metadata-and-seqs]
      - get: cleaned-metadata-az-other
        passed: [match-az-other-metadata-and-seqs]
      - task: merge-focal-seqs
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: feature_table::merge_seqs
          Q2_I_data: input1 input2
          Q2_O_merged_data: ((path_seqs_az_merged))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 4096

        input_mapping:
          input1: seqs-az-tgen
          input2: seqs-az-other
      - put: seqs-az-merged
        params:
          source: outputs/merged_data/

  - name: sample-longitudinal
    public: true
    plan:
      - get: covid-ci
      - get: seqs-gisaid-context
        passed: [filter-gisaid]
        trigger: true
      - get: cleaned-metadata-gisaid
        passed: [filter-gisaid]
        trigger: true
      - task: sample-longitudinal
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::sample_longitudinal
          Q2_I_context_seqs: input1
          Q2_P_start_date: 2019-12
          Q2_P_samples_per_interval: 7
          Q2_P_days_per_interval: 7
          Q2_C_dates: input2::date
          Q2_O_selection: ((path_selection_longitudinal))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:20:00
          SLURM_mem: 12096

        input_mapping:
          input1: seqs-gisaid-context
          input2: cleaned-metadata-gisaid
      - put: selection-longitudinal
        params:
          source: outputs/selection/

  - name: sample-diversity
    public: true
    plan:
      - get: covid-ci
      - get: seqs-gisaid-context
        passed: [filter-gisaid]
        trigger: true
      - task: sample-diversity
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::sample_diversity
          Q2_I_context_seqs: input1
          Q2_P_percent_id: .999
          Q2_P_n_threads: 24
          Q2_O_selection: ((path_selection_diversity))

          SLURM_cpus_per_task: 24
          SLURM_time: 96:00:00
          SLURM_mem: 65536

        input_mapping:
          input1: seqs-gisaid-context
      - put: selection-diversity
        params:
          source: outputs/selection/

  - name: sample-neighbors
    public: true
    plan:
      - get: covid-ci
      - get: seqs-gisaid-context
        passed: [filter-gisaid]
        trigger: true
      - get: seqs-az-focal
        passed: [filter-az-seqs]
        trigger: true
      - get: cleaned-metadata-gisaid
        passed: [filter-gisaid]
        trigger: true
      - get: cleaned-metadata-az-tgen
        passed: [merge-focal-seqs]
      - get: cleaned-metadata-az-other
        passed: [merge-focal-seqs]
      - task: sample-neighbors
        file: covid-ci/tasks/execute3.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::sample_neighbors
          Q2_I_focal_seqs: input2
          Q2_I_context_seqs: input1
          Q2_C_locale: input3::division
          Q2_P_percent_id: .9999
          Q2_P_samples_per_cluster: 3
          Q2_P_n_threads: 28
          Q2_O_selection: ((path_selection_neighbors))

          SLURM_cpus_per_task: 28
          SLURM_time: 36:30:00
          SLURM_mem: 65536

        input_mapping:
          input1: seqs-gisaid-context
          input2: seqs-az-focal
          input3: cleaned-metadata-gisaid
      - put: selection-neighbors
        params:
          source: outputs/selection/

  - name: summarize-selections
    public: true
    plan:
      - get: covid-ci
      - get: seqs-gisaid-context
        passed: [sample-longitudinal, sample-diversity, sample-neighbors]
        trigger: true
      - get: seqs-az-focal
        passed: [sample-neighbors]
        trigger: true
      - get: selection-longitudinal
        passed: [sample-longitudinal]
      - get: selection-diversity
        passed: [sample-diversity]
      - get: selection-neighbors
        passed: [sample-neighbors]
      - task: summarize-selections
        file: covid-ci/tasks/execute3.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::summarize_selections
          Q2_I_selections: input1 input2 input3
          Q2_O_visualization: ((path_view_selections))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 4096

        input_mapping:
          input1: selection-longitudinal
          input2: selection-diversity
          input3: selection-neighbors
      - put: view-selections
        params:
          source: outputs/visualization

  - name: combine-selections
    public: true
    plan:
      - get: covid-ci
      - get: seqs-gisaid-context
        passed: [sample-longitudinal, sample-diversity, sample-neighbors]
        trigger: true
      - get: seqs-az-focal
        passed: [sample-neighbors]
        trigger: true
      - get: selection-longitudinal
        passed: [sample-longitudinal]
      - get: selection-diversity
        passed: [sample-diversity]
      - get: selection-neighbors
        passed: [sample-neighbors]
      - get: cleaned-metadata-az-tgen
        passed: [sample-neighbors]
      - get: cleaned-metadata-az-other
        passed: [sample-neighbors]
      - get: cleaned-metadata-gisaid
        passed: [sample-neighbors, sample-longitudinal]
      - task: combine-selections
        file: covid-ci/tasks/execute3.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::combine_selections
          Q2_I_selections: input1 input2 input3
          Q2_O_combined_selection: ((path_selection_final))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:20:00
          SLURM_mem: 4096

        input_mapping:
          input1: selection-longitudinal
          input2: selection-diversity
          input3: selection-neighbors
      - put: selection-final
        params:
          source: outputs/combined_selection

  - name: combine-metadata
    public: true
    plan:
      - get: covid-ci
      - get: cleaned-metadata-az-tgen
        passed: [combine-selections]
        trigger: true
      - get: cleaned-metadata-az-other
        passed: [combine-selections]
        trigger: true
      - get: cleaned-metadata-gisaid
        passed: [combine-selections]
        trigger: true
      - get: cleaned-metadata-reference
        passed: [match-reference-metadata-and-seqs]
        trigger: true
      - get: selection-final
        passed: [combine-selections]
        trigger: true
      - task: combine-metadata
        file: covid-ci/tasks/execute5.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          SCRIPT: concat_md.py
          SCRIPT_I_context_md: input1
          SCRIPT_I_md: input2 input3 input4
          SCRIPT_I_selection: input5
          SCRIPT_output: ((path_combined_metadata))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:20:00
          SLURM_mem: 4096

        input_mapping:
          input1: cleaned-metadata-gisaid
          input2: cleaned-metadata-az-tgen
          input3: cleaned-metadata-az-other
          input4: cleaned-metadata-reference
          input5: selection-final
      - put: combined-metadata
        params:
          source: outputs/result

  - name: filter-to-subsample
    public: true
    plan:
      - get: covid-ci
      - get: seqs-gisaid-context
        passed: [combine-selections]
      - get: selection-final
        passed: [combine-selections]
        trigger: true
      - task: filter-to-subsample
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: feature_table::filter_seqs
          Q2_I_data: input1
          Q2_M_metadata: input2
          Q2_O_filtered_data: ((path_subsampled_gisaid_context))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 16384

        input_mapping:
          input1: seqs-gisaid-context
          input2: selection-final
      - put: subsampled-gisaid-context
        params:
          source: outputs/filtered_data/

  - name: merge-seqs
    public: true
    plan:
      - get: covid-ci
      - get: seqs-az-focal
        passed: [combine-selections]
      - get: subsampled-gisaid-context
        passed: [filter-to-subsample]
        trigger: true
      - get: seqs-reference
        passed: [match-reference-metadata-and-seqs]
        trigger: true
      - task: merge-seqs
        file: covid-ci/tasks/execute3.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: feature_table::merge_seqs
          Q2_I_data: input1 input2 input3
          Q2_O_merged_data: ((path_seqs_final))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:10:00
          SLURM_mem: 16384

        input_mapping:
          input1: seqs-az-focal
          input2: subsampled-gisaid-context
          input3: seqs-reference
      - put: seqs-final
        params:
          source: outputs/merged_data/

  - name: create-empress-table
    public: true
    plan:
      - get: covid-ci
      - get: seqs-final
        passed: [merge-seqs]
        trigger: true
      - task: create-empress-table
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          SCRIPT: diagonal_matrix.py
          SCRIPT_I_input: input1
          SCRIPT_output: ((path_empress_table))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:10:00
          SLURM_mem: 16384

        input_mapping:
          input1: seqs-final
      - put: empress-table
        params:
          source: outputs/result/

  - name: align-seqs
    public: true
    plan:
      - get: covid-ci
      - get: seqs-final
        passed: [merge-seqs]
        trigger: true
      - task: align-seqs
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: alignment::mafft
          Q2_I_sequences: input1
          Q2_P_n_threads: 28
          Q2_O_alignment: ((path_alignment_raw))

          SLURM_cpus_per_task: 28
          SLURM_time: "72:30:00"
          SLURM_mem: 65536

        input_mapping:
          input1: seqs-final
      - put: alignment-raw
        params:
          source: outputs/alignment

  - name: copy-vcf-mask
    public: true
    plan:
      - get: covid-ci
      - get: vcf-mask-upstream
        trigger: true
      - task: copy-vcf-mask
        file: covid-ci/tasks/transfer.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))

          INPUT_FILE: problematic_sites_sarsCov2.vcf
          EXTERNAL_DIR: ((path_vcf_mask))
        input_mapping:
          input: vcf-mask-upstream
      - put: vcf-mask
        params:
          source: output

  - name: import-vcf-mask
    public: true
    plan:
      - get: covid-ci
      - get: vcf-mask
        trigger: true
        passed: [copy-vcf-mask]
      - task: import-vcf-mask
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: import
          Q2_INPUT: input1
          Q2_TYPE: AlignmentMask
          Q2_OUTPUT: ((path_alignment_mask))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:05:00
          SLURM_mem: 4096

        input_mapping:
          input1: vcf-mask
      - put: alignment-mask
        params:
          source: outputs/result/

  - name: mask-lenient
    public: true
    plan:
      - get: covid-ci
      - get: alignment-raw
        passed: [align-seqs]
        trigger: true
      - get: alignment-mask
        passed: [import-vcf-mask]
        trigger: true
      - task: mask-lenient
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::mask
          Q2_I_alignment: input1
          Q2_I_mask: input2
          Q2_P_level: mask
          Q2_P_mask_terminal_gaps: True
          Q2_O_masked_alignment: ((path_alignment_masked_lenient))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:20:00
          SLURM_mem: 16384

        input_mapping:
          input1: alignment-raw
          input2: alignment-mask
      - put: alignment-masked-lenient
        params:
          source: outputs/masked_alignment/

  - name: mask-stringent
    public: true
    plan:
      - get: covid-ci
      - get: alignment-raw
        passed: [align-seqs]
        trigger: true
      - get: alignment-mask
        passed: [import-vcf-mask]
        trigger: true
      - task: mask-stringent
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::mask
          Q2_I_alignment: input1
          Q2_I_mask: input2
          Q2_P_level: caution
          Q2_P_mask_terminal_gaps: True
          Q2_O_masked_alignment: ((path_alignment_masked_stringent))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:20:00
          SLURM_mem: 16384

        input_mapping:
          input1: alignment-raw
          input2: alignment-mask
      - put: alignment-masked-stringent
        params:
          source: outputs/masked_alignment/

  - name: iqtree-lenient
    public: true
    plan:
      - get: covid-ci
      - get: alignment-masked-lenient
        passed: [mask-lenient]
        trigger: true
      - task: iqtree-lenient
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: phylogeny::iqtree
          Q2_I_alignment: input1
          Q2_P_n_cores: 28
          Q2_O_tree: ((path_tree_ml_lenient))

          SLURM_cpus_per_task: 28
          SLURM_time: 18:00:00
          SLURM_mem: 65536

        input_mapping:
          input1: alignment-masked-lenient
      - put: tree-ml-lenient
        params:
          source: outputs/tree/

  - name: iqtree-stringent
    public: true
    plan:
      - get: covid-ci
      - get: alignment-masked-stringent
        passed: [mask-stringent]
        trigger: true
      - task: iqtree-stringent
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: phylogeny::iqtree
          Q2_I_alignment: input1
          Q2_P_n_cores: 28
          Q2_O_tree: ((path_tree_ml_stringent))

          SLURM_cpus_per_task: 28
          SLURM_time: 18:00:00
          SLURM_mem: 65536

        input_mapping:
          input1: alignment-masked-stringent
      - put: tree-ml-stringent
        params:
          source: outputs/tree/

  - name: root-lenient
    public: true
    plan:
      - get: covid-ci
      - get: tree-ml-lenient
        passed: [iqtree-lenient]
        trigger: true
      - task: root-lenient
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: phylogeny::midpoint_root
          Q2_I_tree: input1
          Q2_O_rooted_tree: ((path_tree_rooted_lenient))

          SLURM_cpus_per_task: 1
          SLURM_time: 00:20:00
          SLURM_mem: 16384

        input_mapping:
          input1: tree-ml-lenient
      - put: tree-rooted-lenient
        params:
          source: outputs/rooted_tree/
          
  - name: root-stringent
    public: true
    plan:
      - get: covid-ci
      - get: tree-ml-stringent
        passed: [iqtree-stringent]
        trigger: true
      - task: root-stringent
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: phylogeny::midpoint_root
          Q2_I_tree: input1
          Q2_O_rooted_tree: ((path_tree_rooted_stringent))

          SLURM_cpus_per_task: 1
          SLURM_time: 00:20:00
          SLURM_mem: 16384

        input_mapping:
          input1: tree-ml-stringent
      - put: tree-rooted-stringent
        params:
          source: outputs/rooted_tree/

  - name: empress-lenient
    public: true
    plan:
      - get: covid-ci
      - get: tree-rooted-lenient
        passed: [root-lenient]
        trigger: true
      - get: empress-table
        passed: [create-empress-table]
      - get: combined-metadata
        passed: [combine-metadata]
        trigger: true
      - task: root-lenient
        file: covid-ci/tasks/execute3.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: empress::plot
          Q2_I_tree: input1
          Q2_I_feature_table: input2
          Q2_M_sample_metadata: input3
          Q2_O_visualization: ((path_view_empress_lenient))

          SLURM_cpus_per_task: 1
          SLURM_time: 00:20:00
          SLURM_mem: 16384
        input_mapping:
          input1: tree-rooted-lenient
          input2: empress-table
          input3: combined-metadata
      - put: view-empress-lenient
        params:
          source: outputs/visualization/

  - name: empress-stringent
    public: true
    plan:
      - get: covid-ci
      - get: tree-rooted-stringent
        passed: [root-stringent]
        trigger: true
      - get: empress-table
        passed: [create-empress-table]
      - get: combined-metadata
        passed: [combine-metadata]
        trigger: true
      - task: root-stringent
        file: covid-ci/tasks/execute3.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: empress::plot
          Q2_I_tree: input1
          Q2_I_feature_table: input2
          Q2_M_sample_metadata: input3
          Q2_O_visualization: ((path_view_empress_stringent))

          SLURM_cpus_per_task: 1
          SLURM_time: 00:20:00
          SLURM_mem: 16384
        input_mapping:
          input1: tree-rooted-stringent
          input2: empress-table
          input3: combined-metadata
      - put: view-empress-stringent
        params:
          source: outputs/visualization/

  - name: label-unaligned-seqs
    public: true
    plan:
      - get: covid-ci
      - get: seqs-final
        passed: [merge-seqs]
        trigger: true
      - get: combined-metadata
        passed: [combine-metadata]
        trigger: true
      - task: label-unaligned-seqs
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::label_unaligned_seqs
          Q2_I_seqs: input1
          Q2_M_metadata: input2
          Q2_P_delimiter: '|'
          Q2_P_columns: region country division location date
          Q2_O_labeled_seqs: ((path_seqs_unaligned_labeled))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:10:00
          SLURM_mem: 16384

        input_mapping:
          input1: seqs-final
          input2: combined-metadata
      - put: seqs-unaligned-labeled
        params:
          source: outputs/labeled_seqs/

  - name: export-unaligned
    public: true
    plan:
      - get: covid-ci
      - get: seqs-unaligned-labeled
        passed: [label-unaligned-seqs]
        trigger: true
      - task: export-unaligned
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: export
          Q2_INPUT: input1
          Q2_FORMAT: DNAFASTAFormat
          Q2_EXT: .fasta
          Q2_OUTPUT: ((path_seqs_unaligned_fasta))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 16384

        input_mapping:
          input1: seqs-unaligned-labeled
      - put: seqs-unaligned-fasta
        params:
          source: outputs/result/

  - name: label-lenient
    public: true
    plan:
      - get: covid-ci
      - get: alignment-masked-lenient
        passed: [mask-lenient]
        trigger: true
      - get: combined-metadata
        passed: [combine-metadata]
        trigger: true
      - task: label-lenient
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::label_seqs
          Q2_I_seqs: input1
          Q2_M_metadata: input2
          Q2_P_delimiter: '|'
          Q2_P_columns: region country division location date
          Q2_O_labeled_seqs: ((path_alignment_labeled_lenient))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:10:00
          SLURM_mem: 16384

        input_mapping:
          input1: alignment-masked-lenient
          input2: combined-metadata
      - put: alignment-labeled-lenient
        params:
          source: outputs/labeled_seqs/

  - name: export-lenient
    public: true
    plan:
      - get: covid-ci
      - get: alignment-labeled-lenient
        passed: [label-lenient]
        trigger: true
      - task: export-lenient
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: export
          Q2_INPUT: input1
          Q2_FORMAT: AlignedDNAFASTAFormat
          Q2_EXT: .fasta
          Q2_OUTPUT: ((path_export_alignment_lenient))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 16384

        input_mapping:
          input1: alignment-labeled-lenient
      - put: export-alignment-lenient
        params:
          source: outputs/result/

  - name: label-stringent
    public: true
    plan:
      - get: covid-ci
      - get: alignment-masked-stringent
        passed: [mask-stringent]
        trigger: true
      - get: combined-metadata
        passed: [combine-metadata]
        trigger: true
      - task: label-stringent
        file: covid-ci/tasks/execute2.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: genome_sampler::label_seqs
          Q2_I_seqs: input1
          Q2_M_metadata: input2
          Q2_P_delimiter: '|'
          Q2_P_columns: region country division location date
          Q2_O_labeled_seqs: ((path_alignment_labeled_stringent))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:10:00
          SLURM_mem: 16384

        input_mapping:
          input1: alignment-masked-stringent
          input2: combined-metadata
      - put: alignment-labeled-stringent
        params:
          source: outputs/labeled_seqs/

  - name: export-stringent
    public: true
    plan:
      - get: covid-ci
      - get: alignment-labeled-stringent
        passed: [label-stringent]
        trigger: true
      - task: export-stringent
        file: covid-ci/tasks/execute1.yaml
        params:
          HOSTNAME: ((hostname))
          USERNAME: ((username))
          PRIVATE_KEY: ((private_key))
          KEY_TYPE: ((key_type))
          WORKDIR: ((workdir))

          Q2_ACTION: export
          Q2_INPUT: input1
          Q2_FORMAT: AlignedDNAFASTAFormat
          Q2_EXT: .fasta
          Q2_OUTPUT: ((path_export_alignment_stringent))

          SLURM_cpus_per_task: 1
          SLURM_time: 0:15:00
          SLURM_mem: 16384

        input_mapping:
          input1: alignment-labeled-stringent
      - put: export-alignment-stringent
        params:
          source: outputs/result/
